name: Auto Release and Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write

jobs:
  auto-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check commit message and release
        id: check
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          
          if [[ $COMMIT_MSG =~ ^(patch|minor|major):[[:space:]]*(.+)$ ]]; then
            TYPE="${BASH_REMATCH[1]}"
            NOTES="${BASH_REMATCH[2]}"
            
            echo "✅ Release detected: $TYPE"
            echo "📝 Notes: $NOTES"
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "release_type=$TYPE" >> $GITHUB_OUTPUT
            echo "release_notes=$NOTES" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ Not a release commit - skipping"
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Python
        if: steps.check.outputs.should_release == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Bump version and create tag
        if: steps.check.outputs.should_release == 'true'
        id: bump
        run: |
          TYPE="${{ steps.check.outputs.release_type }}"
          
          # Get current version
          CURRENT_VERSION=$(python -c "exec(open('version.py').read()); print(__version__)")
          echo "Current version: $CURRENT_VERSION"
          
          # Parse version
          IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
          
          # Bump version
          case $TYPE in
            major)
              MAJOR=$((MAJOR + 1))
              MINOR=0
              PATCH=0
              ;;
            minor)
              MINOR=$((MINOR + 1))
              PATCH=0
              ;;
            patch)
              PATCH=$((PATCH + 1))
              ;;
          esac
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Update version files
          sed -i "s/__version__ = \".*\"/__version__ = \"$NEW_VERSION\"/" version.py
          sed -i "s/__version__ = \".*\"/__version__ = \"$NEW_VERSION\"/" gravixlayer/__init__.py
          sed -i "s/version=\".*\"/version=\"$NEW_VERSION\"/" setup.py
          sed -i "s/version = \".*\"/version = \"$NEW_VERSION\"/" pyproject.toml
          
          # Configure git with your info (not bot)
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          
          # Commit version bump
          git add version.py gravixlayer/__init__.py setup.py pyproject.toml
          git commit -m "Bump version: $CURRENT_VERSION -> $NEW_VERSION"
          
          # Create and push tag
          git tag "v$NEW_VERSION"
          git push origin main
          git push origin "v$NEW_VERSION"

      - name: Install build tools
        if: steps.check.outputs.should_release == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        if: steps.check.outputs.should_release == 'true'
        run: python -m build

      - name: Publish to PyPI
        if: steps.check.outputs.should_release == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Create GitHub Release
        if: steps.check.outputs.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          name: "Release v${{ steps.bump.outputs.new_version }}"
          body: ${{ steps.check.outputs.release_notes }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
