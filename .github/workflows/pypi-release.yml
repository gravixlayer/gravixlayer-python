name: Build, Bump and Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      bump:
        description: "Which version part to bump? (patch, minor, major)"
        required: true
        default: "patch"

permissions:
  contents: write
  id-token: write

jobs:
  bump-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Bump version in version.py
        id: bumpversion
        run: |
          bump="${{ github.event.inputs.bump }}"
          file="version.py"
          version=$(grep __version__ $file | head -1 | cut -d'"' -f2)
          IFS='.' read -r major minor patch <<<"$version"
          if [ "$bump" = "major" ]; then
            major=$((major + 1)); minor=0; patch=0
          elif [ "$bump" = "minor" ]; then
            minor=$((minor + 1)); patch=0
          else 
            patch=$((patch + 1))
          fi
          new_version="$major.$minor.$patch"
          sed -i "s/__version__ = .*/__version__ = \"$new_version\"/" "$file"
          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Commit version bump and create tag
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.py
          git commit -m "release: bump version to v${{ steps.bumpversion.outputs.new_version }}" || echo "Nothing to commit"
          git tag v${{ steps.bumpversion.outputs.new_version }}
          git push origin HEAD
          git push origin v${{ steps.bumpversion.outputs.new_version }}

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.bumpversion.outputs.new_version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
